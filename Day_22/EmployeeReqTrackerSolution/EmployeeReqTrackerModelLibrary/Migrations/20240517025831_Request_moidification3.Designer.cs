// <auto-generated />
using System;
using EmployeeReqTrackerModelLibrary.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeReqTrackerModelLibrary.Migrations
{
    [DbContext(typeof(EmployeeReqTrackerContext))]
    [Migration("20240517025831_Request_moidification3")]
    partial class Request_moidification3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmployeeReqTrackerModelLibrary.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            Name = "test1",
                            Password = "test1123",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 102,
                            Name = "test2",
                            Password = "test2123",
                            Role = "user"
                        },
                        new
                        {
                            Id = 103,
                            Name = "test3",
                            Password = "test3123",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("EmployeeReqTrackerModelLibrary.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"), 1L, 1);

                    b.Property<int>("FeedbackBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("FeedbackDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SolutionId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.HasIndex("FeedbackBy");

                    b.HasIndex("SolutionId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("EmployeeReqTrackerModelLibrary.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"), 1L, 1);

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RequestClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestRaisedBy")
                        .HasColumnType("int");

                    b.Property<string>("RequestStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestId");

                    b.HasIndex("RequestClosedBy");

                    b.HasIndex("RequestRaisedBy");

                    b.ToTable("Requests");

                    b.HasData(
                        new
                        {
                            RequestId = 1,
                            RequestDate = new DateTime(2024, 5, 15, 8, 28, 30, 762, DateTimeKind.Local).AddTicks(3694),
                            RequestMessage = "Laptop Repair",
                            RequestRaisedBy = 102,
                            RequestStatus = "Open"
                        });
                });

            modelBuilder.Entity("EmployeeReqTrackerModelLibrary.Solution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsSolutionAccepted")
                        .HasColumnType("bit");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("RequestRaiserComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolutionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SolvedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("SolvedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.HasIndex("SolvedBy");

                    b.ToTable("Solutions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsSolutionAccepted = false,
                            RequestId = 1,
                            RequestRaiserComment = "Checked it",
                            SolutionText = "Check Bois",
                            SolvedBy = 102,
                            SolvedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EmployeeReqTrackerModelLibrary.Feedback", b =>
                {
                    b.HasOne("EmployeeReqTrackerModelLibrary.Employee", "FeedbackByEmployee")
                        .WithMany("FeedbacksProvided")
                        .HasForeignKey("FeedbackBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EmployeeReqTrackerModelLibrary.Solution", "Solution")
                        .WithMany("Feedbacks")
                        .HasForeignKey("SolutionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FeedbackByEmployee");

                    b.Navigation("Solution");
                });

            modelBuilder.Entity("EmployeeReqTrackerModelLibrary.Request", b =>
                {
                    b.HasOne("EmployeeReqTrackerModelLibrary.Employee", "RequestClosedByEmployee")
                        .WithMany("RequestsClosed")
                        .HasForeignKey("RequestClosedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EmployeeReqTrackerModelLibrary.Employee", "RequestRaisedByEmployee")
                        .WithMany("RequestsRaised")
                        .HasForeignKey("RequestRaisedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RequestClosedByEmployee");

                    b.Navigation("RequestRaisedByEmployee");
                });

            modelBuilder.Entity("EmployeeReqTrackerModelLibrary.Solution", b =>
                {
                    b.HasOne("EmployeeReqTrackerModelLibrary.Request", "RequestRaisedBy")
                        .WithMany("RequestSolutions")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EmployeeReqTrackerModelLibrary.Employee", "RequestSolvedBy")
                        .WithMany("SolutionsProvided")
                        .HasForeignKey("SolvedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RequestRaisedBy");

                    b.Navigation("RequestSolvedBy");
                });

            modelBuilder.Entity("EmployeeReqTrackerModelLibrary.Employee", b =>
                {
                    b.Navigation("FeedbacksProvided");

                    b.Navigation("RequestsClosed");

                    b.Navigation("RequestsRaised");

                    b.Navigation("SolutionsProvided");
                });

            modelBuilder.Entity("EmployeeReqTrackerModelLibrary.Request", b =>
                {
                    b.Navigation("RequestSolutions");
                });

            modelBuilder.Entity("EmployeeReqTrackerModelLibrary.Solution", b =>
                {
                    b.Navigation("Feedbacks");
                });
#pragma warning restore 612, 618
        }
    }
}
